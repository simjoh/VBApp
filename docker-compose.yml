services:
  php-vasterbottenbrevetapp:
    container_name: php-apache
    build:
      context: .
      dockerfile: ./docker/apache/Dockerfile
    depends_on:
      - db-2
    volumes:
      - ./api:/var/www/html/api/
      - working_dir:/var/www/html/
    ports:
      - 8090:80
    environment:
      - PMA_HOST=db-2
      - DB_DATABASE=vasterbottenbrevet_se
      - DB_USERNAME=root
      - DB_PASSWORD=secret
    links:
      - db-2
      - app
    expose:
      - 8090
    networks:
    -  sample_network
  app:
    image: vasterbottenbrevet_se_app:latest
    build:
      context: .
      dockerfile: ./loppservice/Dockerfile
      target: dev
    volumes:
      - ./loppservice:/var/www/html
      - working_dir2:/var/www/html
    ports:
      - "8082:80"
    environment:
      - APP_ENV=dev
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=192.168.1.194
      - DB_PORT=3309
      - DB_DATABASE=vasterbottenbrevet_se_db_2
      - DB_USERNAME=root
      - DB_PASSWORD=secret
    depends_on:
      db-1:
        condition: service_healthy
      stripe:
        condition: service_started
    networks:
      - sample_network
    command: ["/usr/local/bin/wait-for-db.sh", "db-1", "apache2-foreground"]
  db-1:
    image: mariadb:10.5.8
    container_name: db-1
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_ROOT_USER: root
      MYSQL_DATABASE: loppservice
      MYSQL_USER: myuser
      MYSQL_PASSWORD: secret
    networks:
      - sample_network
    ports:
      - 3306:3306
    volumes:
      - db1_data:/var/lib/mysql
      - ./docker/loppservice/db/init.sql:/docker-entrypoint-initdb.d/01init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "myuser", "--password=secret"]
      interval: 5s
      timeout: 5s
      retries: 5
  db-2:
    image: mariadb:10.5.8
    container_name: db-2
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_ROOT_USER: root
      MYSQL_DATABASE: vasterbottenbrevet_se
      MYSQL_USER: myuser
      MYSQL_PASSWORD: secret
    networks:
      - sample_network
    ports:
        - 8088:3306
    volumes:
      -  db2_data:/var/lib/mysql
      - ./docker/database/schema_create.sql:/docker-entrypoint-initdb.d/1.sql
      - ./docker/database/schema_demo_data.sql:/docker-entrypoint-initdb.d/3.sql
      - ./docker/database/functions.sql:/docker-entrypoint-initdb.d/2.sql
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    links:
      - db-1
      - db-2
    environment:
      PMA_HOSTS: db-1,db-2
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    depends_on:
      - db-2
      - db-1
    networks:
      - sample_network
    ports:
      - 8190:80
  mailhog:
    image: mailhog/mailhog
    logging:
      driver: 'none'  # disable saving logs
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      sample_network:
  stripe:
    image: stripe/stripe-cli
    container_name: stripe-cli
    volumes:
      - ./docker/stripe:/root/.config/stripe  # persist credentials/config
    entrypoint: [ ]
    command:
      - sh
      - -c
      - |
        apk add --no-cache curl
        stripe config --set api_key ${STRIPE_API_KEY}
        echo "Starting webhook listener..."
        stripe listen --forward-to app:80/payments/events
    environment:
      STRIPE_API_KEY: ${STRIPE_API_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
    networks:
      - sample_network
#  brevetapp_gui:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    depends_on:
#      - php-vasterbottenbrevetapp
#    links:
#      - php-vasterbottenbrevetapp
#    ports:
#      - 85:80
#    networks:
#      - sample_network
  cron:
    build:
      context: ./docker/cron
      dockerfile: Dockerfile
    container_name: vbapp-cron
    depends_on:
      - php-vasterbottenbrevetapp
    networks:
      - sample_network
networks:
  sample_network:
volumes:
  working_dir:
  working_dir2:
  db1_data:
  db2_data:





