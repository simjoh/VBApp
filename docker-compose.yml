services:
  php-vasterbottenbrevetapp:
    container_name: php-apache
    build:
      context: .
      dockerfile: ./docker/apache/Dockerfile
    depends_on:
      - db-2
    volumes:
      - ./api:/var/www/html/api/
      - working_dir:/var/www/html/
    ports:
      - 8090:80
    environment:
      PMA_HOST: db-2
    links:
      - db-2
      - app
    expose:
      - 8090
    networks:
    -  sample_network
  app:
    image: vasterbottenbrevet_se_app:latest
    build:
      context: .
      dockerfile: ./loppservice/Dockerfile
      target: dev
    volumes:
      - working_dir2:/var/www/html/loppservice
#      - ./loppservice:/var/www/html
    #  - working_dir2:/var/www/html/
    ports:
      - "8082:80"
    environment:
      - APP_ENV=dev
      - APP_DEBUG=true
    depends_on:
      - db-1
    links:
      - db-1
    networks:
      - sample_network
  db-1:
    image: mariadb:10.5.8
    container_name: db-1
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_ROOT_USER: root
      MYSQL_DATABASE: loppservice
      MYSQL_USER: myuser
      MYSQL_PASSWORD: secret
    networks:
      - sample_network
    ports:
      - 3306:3306
    volumes:
      - db1_data:/var/lib/mysql
      - ./docker/loppservice/db/init.sql:/docker-entrypoint-initdb.d/01init.sql
  db-2:
    image: mariadb:10.5.8
    container_name: db-2
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_ROOT_USER: root
      MYSQL_DATABASE: vasterbottenbrevet_se
      MYSQL_USER: myuser
      MYSQL_PASSWORD: secret
    networks:
      - sample_network
    #    ports:
    #      - 8088:3306
    volumes:
      -  db2_data:/var/lib/mysql
      - ./docker/database/schema_create.sql:/docker-entrypoint-initdb.d/1.sql
      - ./docker/database/schema_demo_data.sql:/docker-entrypoint-initdb.d/3.sql
      - ./docker/database/functions.sql:/docker-entrypoint-initdb.d/2.sql
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    links:
      - db-1
      - db-2
    environment:
      PMA_HOSTS: db-1,db-2
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    depends_on:
      - db-2
      - db-1
    networks:
      - sample_network
    ports:
      - 8190:80
  mailhog:
    image: mailhog/mailhog
    logging:
      driver: 'none'  # disable saving logs
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      sample_network:
#  brevetapp_gui:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    depends_on:
#      - php-vasterbottenbrevetapp
#    links:
#      - php-vasterbottenbrevetapp
#    ports:
#      - 85:80
#    networks:
#      - sample_network
  cron:
    build:
      context: ./docker/cron
      dockerfile: Dockerfile
    links:
      - app
      - db-1
    volumes:
      - working_dir2:/var/www/html/
    networks:
      - sample_network
networks:
  sample_network:
volumes:
  working_dir:
  working_dir2:
  db1_data:
  db2_data: